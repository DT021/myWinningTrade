= render partial: 'search'

h1
  = @stock.symbol
  ' &nbsp;
  small = @stock.name

.row
  #slider

br

.row
  .span10
    #chart
      .spinner
  .span2
    #legend

javascript:

  function initGraph(data) {

  var graph = new Rickshaw.Graph({
    element: document.getElementById("chart"),
    width: 770,
    height: 350,
    renderer: 'area',
    stroke: true,
    series: [
      {
        color: 'steelblue', // palette.color(),
        data: data,
        name: '#{@stock.name}'
      }
    ]
  });

  graph.render();

  var slider = new Rickshaw.Graph.RangeSlider({ graph: graph, element: $('#slider') });
  var hoverDetail = new Rickshaw.Graph.HoverDetail({ graph: graph });
  var legend = new Rickshaw.Graph.Legend({ graph: graph, element: document.getElementById('legend') });
  var shelving = new Rickshaw.Graph.Behavior.Series.Toggle({ graph: graph, legend: legend });
  var highlighter = new Rickshaw.Graph.Behavior.Series.Highlight({ graph: graph, legend: legend });

  var ticksTreatment = 'glow';

  var xAxis = new Rickshaw.Graph.Axis.Time({ graph: graph, ticksTreatment: ticksTreatment });
  var yAxis = new Rickshaw.Graph.Axis.Y({ graph: graph, tickFormat: Rickshaw.Fixtures.Number.formatKMBT, ticksTreatment: ticksTreatment });

  xAxis.render();
  yAxis.render();
  }


  $.ajax({
    url: '/stock/#{@stock.symbol}/price_history.json',
    dataType: 'JSON',
    success: function(data) {
      var data_points = data.table.price_history;
      var data_points2 = _.map(data_points, function(p) {
       return { x: p[0], y: p[1] };
      });
      initGraph(data_points2)
    }

  });

  // subscribe to:
  // -- add data to seriesData
  // -- graph.update()


br

- fields = %w(current_price stock_exchange eps_estimate_current_year earnings_share eps_estimate_next_year days_range eps_estimate_next_quarter open previous_close last_trade_time volume year_range dividend_yield)
.row
  table.table.table-striped.table-compact
    tbody
    - fields.each_slice(2) do |row_fields|
      tr
        - row_fields.each do |field|
          th = field.humanize
          - value = @stock.send(field)
          td = value ? number_with_delimiter(value) : 'N/A'
        - if row_fields.count < 2
          th &nbsp;
          td &nbsp;
